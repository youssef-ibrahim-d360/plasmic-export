// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: axW1Q7tQMGoC9jdxnXE57v
// Component: j3DSAhMo7crN
import * as React from "react";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  renderPlasmicSlot,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { AntdDatePicker } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: axW1Q7tQMGoC9jdxnXE57v/projectcss
import sty from "./PlasmicDateTimeRangePicker.module.css"; // plasmic-import: j3DSAhMo7crN/css

createPlasmicElementProxy;

export const PlasmicDateTimeRangePicker__VariantProps = new Array();

export const PlasmicDateTimeRangePicker__ArgProps = new Array("children");

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicDateTimeRangePicker__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <h2
        data-plasmic-name={"h2"}
        data-plasmic-override={overrides.h2}
        className={classNames(
          projectcss.all,
          projectcss.h2,
          projectcss.__wab_text,
          sty.h2
        )}
      >
        <React.Fragment>
          <span
            className={"plasmic_default__all plasmic_default__span"}
            style={{ fontWeight: 500 }}
          >
            {"Custom date range analysis"}
          </span>
        </React.Fragment>
      </h2>
      <Stack__
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        {renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              {(() => {
                const child$Props = {
                  allowClear: true,
                  bordered: true,
                  className: classNames(
                    "__wab_instance",
                    sty.dateTimePicker___46M3T
                  ),
                  picker: "date",
                  popupScopeClassName:
                    sty["dateTimePicker___46M3T__datePickerPopup"],
                  showTime: false
                };
                return <AntdDatePicker {...child$Props} />;
              })()}
              {(() => {
                const child$Props = {
                  allowClear: true,
                  bordered: true,
                  className: classNames(
                    "__wab_instance",
                    sty.dateTimePicker__sFlC0
                  ),
                  popupScopeClassName:
                    sty["dateTimePicker__sFlC0__datePickerPopup"],
                  showTime: false
                };
                return <AntdDatePicker {...child$Props} />;
              })()}
            </React.Fragment>
          ),

          value: args.children
        })}
      </Stack__>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "h2", "freeBox"],
  h2: ["h2"],
  freeBox: ["freeBox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicDateTimeRangePicker__ArgProps,
          internalVariantPropNames: PlasmicDateTimeRangePicker__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicDateTimeRangePicker__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDateTimeRangePicker";
  } else {
    func.displayName = `PlasmicDateTimeRangePicker.${nodeName}`;
  }
  return func;
}

export const PlasmicDateTimeRangePicker = Object.assign(
  // Top-level PlasmicDateTimeRangePicker renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h2: makeNodeComponent("h2"),
    freeBox: makeNodeComponent("freeBox"),
    // Metadata about props expected for PlasmicDateTimeRangePicker
    internalVariantProps: PlasmicDateTimeRangePicker__VariantProps,
    internalArgProps: PlasmicDateTimeRangePicker__ArgProps
  }
);

export default PlasmicDateTimeRangePicker;
/* prettier-ignore-end */
